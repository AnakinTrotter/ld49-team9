using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerMovement : MonoBehaviour
{
    private Rigidbody2D rb;
    private Transform player;
    private SpriteRenderer sprite;
    private Animator playerAnim;
    private BoxCollider2D coll;
    private float dirX;
    [SerializeField] private float moveSpeed = 7f;
    [SerializeField] private float jumpForce = 15f;
    [SerializeField] private float teleportDistance = 50f;
    [SerializeField] private LayerMask jumpableGround;

    private enum MovementState {idle, running, jumping, falling}


    // Start is called before the first frame update
    void Start()
    {
        Debug.Log("Initialized.");
        rb = GetComponent<Rigidbody2D>();
        player = GetComponent<Transform>();
        sprite = GetComponent<SpriteRenderer>();
        playerAnim = GetComponent<Animator>();
        coll = GetComponent<BoxCollider2D>();
    }

    // Update is called once per frame
    void Update()
    {
        dirX = Input.GetAxisRaw("Horizontal");
        
        rb.velocity = new Vector2(moveSpeed * dirX, rb.velocity.y);

        if (Input.GetButtonDown("Jump") && IsGrounded())
        {
            rb.velocity = new Vector2(rb.velocity.x, jumpForce);
        }

        if (Input.GetMouseButtonDown(1))
        {
            // playerAnim.SetTrigger("teleport");
        }

        UpdateAnimations();


    }

    private void UpdateAnimations()
    {
        if (dirX < -0.1f)
        {
            sprite.flipX = true;
        }
        else if (dirX > 0.1f)
        {
            sprite.flipX = false;
        }

        if (IsGrounded() == false)  // If player is airborne
        {
            if (rb.velocity.y < -0.1f)  // if player is falling 
            {
                playerAnim.SetInteger("state", 3);
            } else  // if player is rising
            {
                playerAnim.SetInteger("state", 2);
            }
        } else // If player is grounded
        {
            if (Mathf.Abs(dirX) < 0.1f)  // if player is idle
            {
                playerAnim.SetInteger("state", 0);
            } else  // if player is moving
            {
                playerAnim.SetInteger("state", 1);
            }
        }
        
    }

    private bool IsGrounded()
    {
        return Physics2D.BoxCast(coll.bounds.center, coll.bounds.size, 0f, Vector2.down, .1f, jumpableGround);
    }
